{"ast":null,"code":"import { decorate, observable, computed } from \"mobx\";\nimport axios from \"axios\";\nimport React from \"react\";\nconst instance = axios.create({\n  baseURL: \"http://127.0.0.1:8000/\"\n});\n\nclass CategoriesStore {\n  constructor() {\n    this.categories = [];\n    this.subjects = [];\n    this.schools = [];\n    this.loading = true;\n\n    this.fetchCategories = async () => {\n      try {\n        const res = await instance.get(\"schools/categories/\");\n        const categories = res.data;\n        this.categories = categories;\n        this.loading = false;\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    this.fetchSchools = async () => {\n      try {\n        const res = await instance.get(\"schools/\");\n        const schools = res.data;\n        this.schools = schools;\n        this.loading = false;\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    this.fetchSubjects = async () => {\n      try {\n        const res = await instance.get(\"schools/categories/subjects/\");\n        const subjects = res.data;\n        this.subjects = subjects;\n        this.loading = false;\n      } catch (error) {\n        console.error(error);\n      }\n    };\n  }\n\n}\n\ndecorate(CategoriesStore, {\n  loading: observable,\n  categories: observable,\n  subjects: observable,\n  schools: observable\n});\nconst categoriesStore = new CategoriesStore(); // categoriesStore.fetchCategories();\n\nexport default categoriesStore;","map":{"version":3,"sources":["/Users/fay/Documents/Coded/Development/capstone/frontend/capstonefrontend/src/components/store/categoriesStore.js"],"names":["decorate","observable","computed","axios","React","instance","create","baseURL","CategoriesStore","categories","subjects","schools","loading","fetchCategories","res","get","data","error","console","fetchSchools","fetchSubjects","categoriesStore"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,UAAnB,EAA+BC,QAA/B,QAA+C,MAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAE;AADmB,CAAb,CAAjB;;AAGA,MAAMC,eAAN,CAAsB;AAAA;AAAA,SACpBC,UADoB,GACP,EADO;AAAA,SAEpBC,QAFoB,GAET,EAFS;AAAA,SAGpBC,OAHoB,GAGV,EAHU;AAAA,SAIpBC,OAJoB,GAIV,IAJU;;AAAA,SAKpBC,eALoB,GAKF,YAAY;AAC5B,UAAI;AACF,cAAMC,GAAG,GAAG,MAAMT,QAAQ,CAACU,GAAT,CAAa,qBAAb,CAAlB;AACA,cAAMN,UAAU,GAAGK,GAAG,CAACE,IAAvB;AACA,aAAKP,UAAL,GAAkBA,UAAlB;AACA,aAAKG,OAAL,GAAe,KAAf;AACD,OALD,CAKE,OAAOK,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,KAdmB;;AAAA,SAepBE,YAfoB,GAeL,YAAY;AACzB,UAAI;AACF,cAAML,GAAG,GAAG,MAAMT,QAAQ,CAACU,GAAT,CAAa,UAAb,CAAlB;AACA,cAAMJ,OAAO,GAAGG,GAAG,CAACE,IAApB;AACA,aAAKL,OAAL,GAAeA,OAAf;AACA,aAAKC,OAAL,GAAe,KAAf;AACD,OALD,CAKE,OAAOK,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,KAxBmB;;AAAA,SAyBpBG,aAzBoB,GAyBJ,YAAY;AAC1B,UAAI;AACF,cAAMN,GAAG,GAAG,MAAMT,QAAQ,CAACU,GAAT,CAAa,8BAAb,CAAlB;AACA,cAAML,QAAQ,GAAGI,GAAG,CAACE,IAArB;AACA,aAAKN,QAAL,GAAgBA,QAAhB;AACA,aAAKE,OAAL,GAAe,KAAf;AACD,OALD,CAKE,OAAOK,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,KAlCmB;AAAA;;AAAA;;AAoCtBjB,QAAQ,CAACQ,eAAD,EAAkB;AACxBI,EAAAA,OAAO,EAAEX,UADe;AAExBQ,EAAAA,UAAU,EAAER,UAFY;AAGxBS,EAAAA,QAAQ,EAAET,UAHc;AAIxBU,EAAAA,OAAO,EAAEV;AAJe,CAAlB,CAAR;AAMA,MAAMoB,eAAe,GAAG,IAAIb,eAAJ,EAAxB,C,CACA;;AACA,eAAea,eAAf","sourcesContent":["import { decorate, observable, computed } from \"mobx\";\nimport axios from \"axios\";\nimport React from \"react\";\nconst instance = axios.create({\n  baseURL: \"http://127.0.0.1:8000/\"\n});\nclass CategoriesStore {\n  categories = [];\n  subjects = [];\n  schools = [];\n  loading = true;\n  fetchCategories = async () => {\n    try {\n      const res = await instance.get(\"schools/categories/\");\n      const categories = res.data;\n      this.categories = categories;\n      this.loading = false;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  fetchSchools = async () => {\n    try {\n      const res = await instance.get(\"schools/\");\n      const schools = res.data;\n      this.schools = schools;\n      this.loading = false;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  fetchSubjects = async () => {\n    try {\n      const res = await instance.get(\"schools/categories/subjects/\");\n      const subjects = res.data;\n      this.subjects = subjects;\n      this.loading = false;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n}\ndecorate(CategoriesStore, {\n  loading: observable,\n  categories: observable,\n  subjects: observable,\n  schools: observable\n});\nconst categoriesStore = new CategoriesStore();\n// categoriesStore.fetchCategories();\nexport default categoriesStore;\n"]},"metadata":{},"sourceType":"module"}